{"version":3,"sources":["lib/page/page.js","lib/page/query/qs.js","lib/HTML5-History-API/history.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","page","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"process","path","fn","route","Route","arguments","callbacks","push","middleware","start","unhandled","ctx","handled","current","hashbang","base","location","hash","replace","pathname","search","canonicalPath","stop","href","decodeURLEncodedURIComponent","val","decodeURLComponents","decodeURIComponent","Context","state","indexOf","this","title","document","querystring","slice","params","parts","split","options","method","regexp","pathtoRegexp","keys","sensitive","strict","onclick","which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","target","nodeName","parentNode","hasAttribute","getAttribute","link","sameOrigin","match","orig","substr","preventDefault","show","event","button","origin","protocol","hostname","port","running","prevContext","clickEvent","ontouchstart","history","dispatch","exits","len","popstate","addEventListener","onpopstate","click","url","removeEventListener","pushState","back","setTimeout","redirect","from","to","init","save","nextExit","j","prev","nextEnter","exit","prototype","replaceState","next","qsIndex","m","exec","key","undefined","hasOwnProperty","name","loaded","readyState","_process","path-to-regexp",2,"noop","nextTick","canSetImmediate","setImmediate","canMutationObserver","MutationObserver","canPost","postMessage","queue","hiddenDiv","createElement","observer","queueList","forEach","observe","attributes","setAttribute","ev","source","data","stopPropagation","shift","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir",3,"parse","str","res","tokens","index","PATH_REGEXP","escaped","offset","prefix","capture","group","suffix","asterisk","repeat","optional","delimiter","pattern","escapeGroup","compile","tokensToFunction","matches","Array","RegExp","obj","token","segment","value","TypeError","isarray","encodeURIComponent","test","escapeString","attachKeys","re","flags","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","join","stringToRegexp","tokensToRegExp","end","lastToken","endsWithSlash",4,"isArray","arr","Object","toString","g","Qs","Stringify","Parse","stringify","./parse","./stringify","Utils","internals","depth","arrayLimit","parameterLimit","strictNullHandling","plainObjects","allowPrototypes","allowDots","parseValues","Infinity","part","pos","decode","concat","parseObject","chain","root","create","cleanRoot","parseInt","isNaN","String","parseArrays","parseKeys","givenKey","parent","child","opts","isRegExp","tempObj","newObj","merge","compact","./utils","arrayPrefixGenerators","brackets","indices","skipNulls","encode","object","generateArrayPrefix","filter","sort","isBuffer","Date","toISOString","values","objKeys","arrayFormat","hexTable","array","toUpperCase","arrayToObject","mergeTarget","reduce","acc","string","out","c","charCodeAt","charAt","references","refs","lookup","compacted","constructor","requirejs","w","getTime","onError","message","b","q","apply","k","host","basepath","type","d","getElementsByTagName","h","N","Z","sessionStorage","setItem","B","removeItem","getItem","cookie","pop","p","C","set","get","configurable","y","__defineGetter__","__defineSetter__","execScript","H","O","I","getPrototypeOf","bind","v","$","P","aa","ba","splice","D","onhashchange","ca","Q","createEvent","createEventObject","initEvent","z","A","E","F","R","S","oldURL","newURL","T","U","G","da","srcElement","returnValue","getElementById","id","getBoundingClientRect","scrollTo","J","scrollLeft","top","scrollTop","clientTop","M","documentElement","JSON","K","V","navigator","userAgent","defineProperty","L","W","X","dispatchEvent","x","ea","Y","setup","assign","reload","src","emulate"],"mappings":"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","file":"magpie.html5.router.vendor.min.js","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define('page',[],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.page=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process){\n  /* globals require, module */\n\n  'use strict';\n\n  /**\n   * Module dependencies.\n   */\n\n  var pathtoRegexp = require('path-to-regexp');\n\n  /**\n   * Module exports.\n   */\n\n  module.exports = page;\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = ('undefined' !== typeof document) && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var location = ('undefined' !== typeof window) && (window.history.location || window.location);\n\n  /**\n   * Perform initial dispatch.\n   */\n\n  var dispatch = true;\n\n\n  /**\n   * Decode URL components (query string, pathname, hash).\n   * Accommodates both regular percent encoding and x-www-form-urlencoded format.\n   */\n  var decodeURLComponents = true;\n\n  /**\n   * Base path.\n   */\n\n  var base = '';\n\n  /**\n   * Running flag.\n   */\n\n  var running;\n\n  /**\n   * HashBang option\n   */\n\n  var hashbang = false;\n\n  /**\n   * Previous context, for capturing\n   * page exit events.\n   */\n\n  var prevContext;\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {String|Function} path\n   * @param {Function} fn...\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page('*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(path);\n      for (var i = 1; i < arguments.length; ++i) {\n        page.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      page.start(path);\n    }\n  }\n\n  /**\n   * Callback functions.\n   */\n\n  page.callbacks = [];\n  page.exits = [];\n\n  /**\n   * Current path being processed\n   * @type {String}\n   */\n  page.current = '';\n\n  /**\n   * Number of pages navigated to.\n   * @type {number}\n   *\n   *     page.len == 0;\n   *     page('/login');\n   *     page.len == 1;\n   */\n\n  page.len = 0;\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {String} path\n   * @api public\n   */\n\n  page.base = function(path) {\n    if (0 === arguments.length) return base;\n    base = path;\n  };\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  page.start = function(options) {\n    options = options || {};\n    if (running) return;\n    running = true;\n    if (false === options.dispatch) dispatch = false;\n    if (false === options.decodeURLComponents) decodeURLComponents = false;\n    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n    if (false !== options.click) {\n      document.addEventListener(clickEvent, onclick, false);\n    }\n    if (true === options.hashbang) hashbang = true;\n    if (!dispatch) return;\n    var url = (hashbang && ~location.hash.indexOf('#!')) ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;\n    page.replace(url, null, true, dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  page.stop = function() {\n    if (!running) return;\n    page.current = '';\n    page.len = 0;\n    running = false;\n    document.removeEventListener(clickEvent, onclick, false);\n    window.removeEventListener('popstate', onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @param {Boolean} dispatch\n   * @return {Context}\n   * @api public\n   */\n\n  page.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    if (false !== dispatch) page.dispatch(ctx);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {String} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object} [state]\n   * @api public\n   */\n\n  page.back = function(path, state) {\n    if (page.len > 0) {\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      history.back();\n      page.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    }else{\n      setTimeout(function() {\n        page.show(base, state);\n      });\n    }\n  };\n\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {String} from - if param 'to' is undefined redirects to 'from'\n   * @param {String} [to]\n   * @api public\n   */\n  page.redirect = function(from, to) {\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page(from, function(e) {\n        setTimeout(function() {\n          page.replace(to);\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        page.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @return {Context}\n   * @api public\n   */\n\n\n  page.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) page.dispatch(ctx);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Object} ctx\n   * @api private\n   */\n\n  page.dispatch = function(ctx) {\n    var prev = prevContext,\n      i = 0,\n      j = 0;\n\n    prevContext = ctx;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled(ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n\n    if (hashbang) {\n      current = base + location.hash.replace('#!', '');\n    } else {\n      current = location.pathname + location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    location.href = ctx.canonicalPath;\n  }\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  page.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return page.exit('*', path);\n    }\n\n    var route = new Route(path);\n    for (var i = 1; i < arguments.length; ++i) {\n      page.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {str} URL component to decode\n   */\n  function decodeURLEncodedURIComponent(val) {\n    if (typeof val !== 'string') { return val; }\n    return decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @api public\n   */\n\n  function Context(path, state) {\n    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    this.path = path.replace(base, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = document.title;\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = parts[0];\n      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Expose `Context`.\n   */\n\n  page.Context = Context;\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    page.len++;\n    history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @param {String} path\n   * @param {Object} options.\n   * @api private\n   */\n\n  function Route(path, options) {\n    options = options || {};\n    this.path = (path === '*') ? '(.*)' : path;\n    this.method = 'GET';\n    this.regexp = pathtoRegexp(this.path,\n      this.keys = [],\n      options.sensitive,\n      options.strict);\n  }\n\n  /**\n   * Expose `Route`.\n   */\n\n  page.Route = Route;\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @return {Boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      var val = decodeURLEncodedURIComponent(m[i]);\n      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n        params[key.name] = val;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Handle \"populate\" events.\n   */\n\n  var onpopstate = (function () {\n    var loaded = false;\n    if ('undefined' === typeof window) {\n      return;\n    }\n    if (document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else {\n        page.show(location.pathname + location.hash, undefined, undefined, false);\n      }\n    };\n  })();\n  /**\n   * Handle \"click\" events.\n   */\n\n  function onclick(e) {\n\n    if (1 !== which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n\n\n    // ensure link\n    var el = e.target;\n    while (el && 'A' !== el.nodeName) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName) return;\n\n\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;\n\n\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    if (el.target) return;\n\n    // x-origin\n    if (!sameOrigin(el.href)) return;\n\n\n\n    // rebuild path\n    var path = el.pathname + el.search + (el.hash || '');\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n\n    if (path.indexOf(base) === 0) {\n      path = path.substr(base.length);\n    }\n\n    if (hashbang) path = path.replace('#!', '');\n\n    if (base && orig === path) return;\n\n    e.preventDefault();\n    page.show(orig);\n  }\n\n  /**\n   * Event button.\n   */\n\n  function which(e) {\n    e = e || window.event;\n    return null === e.which ? e.button : e.which;\n  }\n\n  /**\n   * Check if `href` is the same origin.\n   */\n\n  function sameOrigin(href) {\n    var origin = location.protocol + '//' + location.hostname;\n    if (location.port) origin += ':' + location.port;\n    return (href && (0 === href.indexOf(origin)));\n  }\n\n  page.sameOrigin = sameOrigin;\n\n}).call(this,require('_process'))\n},{\"_process\":2,\"path-to-regexp\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],3:[function(require,module,exports){\nvar isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {String} str\n * @return {Array}\n */\nfunction parse (str) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var suffix = res[6]\n    var asterisk = res[7]\n\n    var repeat = suffix === '+' || suffix === '*'\n    var optional = suffix === '?' || suffix === '*'\n    var delimiter = prefix || '/'\n    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?')\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: escapeGroup(pattern)\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {String}   str\n * @return {Function}\n */\nfunction compile (str) {\n  return tokensToFunction(parse(str))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^' + tokens[i].pattern + '$')\n    }\n  }\n\n  return function (obj) {\n    var path = ''\n    var data = obj || {}\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encodeURIComponent(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = encodeURIComponent(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {String} str\n * @return {String}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {String}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {RegExp} path\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {Array}  path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {String} path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  var tokens = parse(path)\n  var re = tokensToRegExp(tokens, options)\n\n  // Attach keys back to the regexp.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] !== 'string') {\n      keys.push(tokens[i])\n    }\n  }\n\n  return attachKeys(re, keys)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {Array}  tokens\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction tokensToRegExp (tokens, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n  var lastToken = tokens[tokens.length - 1]\n  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken)\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.pattern\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (prefix) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 [keys]\n * @param  {Object}                [options]\n * @return {RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  keys = keys || []\n\n  if (!isarray(keys)) {\n    options = keys\n    keys = []\n  } else if (!options) {\n    options = {}\n  }\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys, options)\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(path, keys, options)\n  }\n\n  return stringToRegexp(path, keys, options)\n}\n\n},{\"isarray\":4}],4:[function(require,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}]},{},[1])(1)\n});\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define('page/query',[],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Qs = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar Stringify = require('./stringify');\nvar Parse = require('./parse');\n\nmodule.exports = {\n    stringify: Stringify,\n    parse: Parse\n};\n\n},{\"./parse\":2,\"./stringify\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar Utils = require('./utils');\n\nvar internals = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000,\n    strictNullHandling: false,\n    plainObjects: false,\n    allowPrototypes: false,\n    allowDots: false\n};\n\ninternals.parseValues = function (str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        if (pos === -1) {\n            obj[Utils.decode(part)] = '';\n\n            if (options.strictNullHandling) {\n                obj[Utils.decode(part)] = null;\n            }\n        } else {\n            var key = Utils.decode(part.slice(0, pos));\n            var val = Utils.decode(part.slice(pos + 1));\n\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                obj[key] = [].concat(obj[key]).concat(val);\n            } else {\n                obj[key] = val;\n            }\n        }\n    }\n\n    return obj;\n};\n\ninternals.parseObject = function (chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(internals.parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = internals.parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = internals.parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\ninternals.parseKeys = function (givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1])) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n            if (!options.allowPrototypes) {\n                continue;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return internals.parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : internals.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;\n\n    if (\n        str === '' ||\n        str === null ||\n        typeof str === 'undefined'\n    ) {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = internals.parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj, options);\n    }\n\n    return Utils.compact(obj);\n};\n\n},{\"./utils\":4}],3:[function(require,module,exports){\n'use strict';\n\nvar Utils = require('./utils');\n\nvar internals = {\n    delimiter: '&',\n    arrayPrefixGenerators: {\n        brackets: function (prefix) {\n            return prefix + '[]';\n        },\n        indices: function (prefix, key) {\n            return prefix + '[' + key + ']';\n        },\n        repeat: function (prefix) {\n            return prefix;\n        }\n    },\n    strictNullHandling: false,\n    skipNulls: false,\n    encode: true\n};\n\ninternals.stringify = function (object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encode, filter, sort, allowDots) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (Utils.isBuffer(obj)) {\n        obj = String(obj);\n    } else if (obj instanceof Date) {\n        obj = obj.toISOString();\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encode ? Utils.encode(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean') {\n        if (encode) {\n            return [Utils.encode(prefix) + '=' + Utils.encode(obj)];\n        }\n        return [prefix + '=' + obj];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encode, filter));\n        } else {\n            values = values.concat(internals.stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encode, filter));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : internals.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : internals.encode;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var objKeys;\n    var filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        objKeys = filter = options.filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in internals.arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encode, filter, sort, allowDots));\n    }\n\n    return keys.join(delimiter);\n};\n\n},{\"./utils\":4}],4:[function(require,module,exports){\n'use strict';\n\nvar hexTable = (function () {\n    var array = new Array(256);\n    for (var i = 0; i < 256; ++i) {\n        array[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            target[source] = true;\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n\treturn Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n\t\treturn acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += (hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    for (var j = 0; j < keys.length; ++j) {\n        var key = keys[j];\n        obj[key] = exports.compact(obj[key], refs);\n    }\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n},{}]},{},[1])(1)\n});\n","/*!\n * History API JavaScript Library v4.2.7\n *\n * Support: IE8+, FF3+, Opera 9+, Safari, Chrome and other\n *\n * Copyright 2011-2015, Dmitrii Pakhtinov ( spb.piksel@gmail.com )\n *\n * http://spb-piksel.ru/\n *\n * MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * Update: 2016-03-08 16:57\n */\n(function(m){if(\"function\"===typeof define&&define.amd){if(\"undefined\"!==typeof requirejs){var w=\"[history\"+(new Date).getTime()+\"]\",j=requirejs.onError;m.toString=function(){return w};requirejs.onError=function(m){-1===m.message.indexOf(w)&&j.call(requirejs,m)}}define('lib/HTML5-History-API/history.min',[],m)}if(\"object\"===typeof exports&&\"undefined\"!==typeof module)module.exports=m();else return m()})(function(){var h=!0,i=null,p=!1;function m(a,b){var c=e.history!==q;c&&(e.history=q);a.apply(q,b);c&&(e.history=k)}function w(){}function j(a,b,c){if(a!=i&&\"\"!==a&&!b){var b=j(),d=g.getElementsByTagName(\"base\")[0];\n!c&&(d&&d.getAttribute(\"href\"))&&(d.href=d.href,b=j(d.href,i,h));c=b.d;d=b.h;a=\"\"+a;a=/^(?:\\w+\\:)?\\/\\//.test(a)?0===a.indexOf(\"/\")?d+a:a:d+\"//\"+b.g+(0===a.indexOf(\"/\")?a:0===a.indexOf(\"?\")?c+a:0===a.indexOf(\"#\")?c+b.e+a:c.replace(/[^\\/]+$/g,\"\")+a)}else if(a=b?a:f.href,!o||c)a=a.replace(/^[^#]*/,\"\")||\"#\",a=f.protocol.replace(/:.*$|$/,\":\")+\"//\"+f.host+l.basepath+a.replace(RegExp(\"^#[/]?(?:\"+l.type+\")?\"),\"\");N.href=a;var a=/(?:([a-zA-Z0-9\\-]+\\:))?(?:\\/\\/(?:[^@]*@)?([^\\/:\\?#]+)(?::([0-9]+))?)?([^\\?#]*)(?:(\\?[^#]+)|\\?)?(?:(#.*))?/.exec(N.href),\nb=a[2]+(a[3]?\":\"+a[3]:\"\"),c=a[4]||\"/\",d=a[5]||\"\",e=\"#\"===a[6]?\"\":a[6]||\"\",k=c+d+e,m=c.replace(RegExp(\"^\"+l.basepath,\"i\"),l.type)+d;return{b:a[1]+\"//\"+b+k,h:a[1],g:b,i:a[2],k:a[3]||\"\",d:c,e:d,a:e,c:k,j:m,f:m+e}}function Z(){var a;try{a=e.sessionStorage,a.setItem(B+\"t\",\"1\"),a.removeItem(B+\"t\")}catch(b){a={getItem:function(a){a=g.cookie.split(a+\"=\");return 1<a.length&&a.pop().split(\";\").shift()||\"null\"},setItem:function(a){var b={};if(b[f.href]=k.state)g.cookie=a+\"=\"+s.stringify(b)}}}try{r=s.parse(a.getItem(B))||\n{}}catch(c){r={}}t(u+\"unload\",function(){a.setItem(B,s.stringify(r))},p)}function C(a,b,c,d){var f=0;c||(c={set:w},f=1);var g=!c.set,j=!c.get,k={configurable:h,set:function(){g=1},get:function(){j=1}};try{y(a,b,k),a[b]=a[b],y(a,b,c)}catch(l){}if(!g||!j)if(a.__defineGetter__&&(a.__defineGetter__(b,k.get),a.__defineSetter__(b,k.set),a[b]=a[b],c.get&&a.__defineGetter__(b,c.get),c.set&&a.__defineSetter__(b,c.set)),!g||!j){if(f)return p;if(a===e){try{var m=a[b];a[b]=i}catch(o){}if(\"execScript\"in e)e.execScript(\"Public \"+\nb,\"VBScript\"),e.execScript(\"var \"+b+\";\",\"JavaScript\");else try{y(a,b,{value:w})}catch(r){\"onpopstate\"===b&&(t(\"popstate\",c=function(){H(\"popstate\",c,p);var b=a.onpopstate;a.onpopstate=i;setTimeout(function(){a.onpopstate=b},1)},p),O=0)}a[b]=m}else try{try{var n=I.create(a);y(I.getPrototypeOf(n)===a?n:a,b,c);for(var q in a)\"function\"===typeof a[q]&&(n[q]=a[q].bind(a));try{d.call(n,n,a)}catch(s){}a=n}catch(u){y(a.constructor.prototype,b,c)}}catch(v){return p}}return a}function $(a,b,c){c=c||{};a=a===\nP?f:a;c.set=c.set||function(c){a[b]=c};c.get=c.get||function(){return a[b]};return c}function aa(a,b,c){a in v?v[a].push(b):3<arguments.length?t(a,b,c,arguments[3]):t(a,b,c)}function ba(a,b,c){var d=v[a];if(d)for(a=d.length;a--;){if(d[a]===b){d.splice(a,1);break}}else H(a,b,c)}function D(a,b){var c=(\"\"+(\"string\"===typeof a?a:a.type)).replace(/^on/,\"\"),d=v[c];if(d){b=\"string\"===typeof a?b:a;if(b.target==i)for(var f=[\"target\",\"currentTarget\",\"srcElement\",\"type\"];a=f.pop();)b=C(b,a,{get:\"type\"===a?function(){return c}:\nfunction(){return e}});O&&((\"popstate\"===c?e.onpopstate:e.onhashchange)||w).call(e,b);for(var f=0,g=d.length;f<g;f++)d[f].call(e,b);return h}return ca(a,b)}function Q(){var a=g.createEvent?g.createEvent(\"Event\"):g.createEventObject();a.initEvent?a.initEvent(\"popstate\",p,p):a.type=\"popstate\";a.state=k.state;D(a)}function z(a,b,c,d){o?A=f.href:(0===n&&(n=2),b=j(b,2===n&&-1!==(\"\"+b).indexOf(\"#\")),b.c!==j().c&&(A=d,c?f.replace(\"#\"+b.f):f.hash=b.f));!E&&a&&(r[f.href]=a);F=p}function R(a){var b=A;A=f.href;\nif(b){S!==f.href&&Q();var a=a||e.event,b=j(b,h),c=j();a.oldURL||(a.oldURL=b.b,a.newURL=c.b);b.a!==c.a&&D(a)}}function T(a){setTimeout(function(){t(\"popstate\",function(a){S=f.href;E||(a=C(a,\"state\",{get:function(){return k.state}}));D(a)},p)},0);!o&&(a!==h&&\"location\"in k)&&(U(G.hash),F&&(F=p,Q()))}function da(a){var a=a||e.event,b;a:{for(b=a.target||a.srcElement;b;){if(\"A\"===b.nodeName)break a;b=b.parentNode}b=void 0}var c=\"defaultPrevented\"in a?a.defaultPrevented:a.returnValue===p;b&&(\"A\"===b.nodeName&&\n!c)&&(c=j(),b=j(b.getAttribute(\"href\",2)),c.b.split(\"#\").shift()===b.b.split(\"#\").shift()&&b.a&&(c.a!==b.a&&(G.hash=b.a),U(b.a),a.preventDefault?a.preventDefault():a.returnValue=p))}function U(a){var b=g.getElementById(a=(a||\"\").replace(/^#/,\"\"));b&&(b.id===a&&\"A\"===b.nodeName)&&(a=b.getBoundingClientRect(),e.scrollTo(J.scrollLeft||0,a.top+(J.scrollTop||0)-(J.clientTop||0)))}var e=(\"object\"===typeof window?window:this)||{};if(!e.history||\"emulate\"in e.history)return e.history;var g=e.document,J=g.documentElement,\nI=e.Object,s=e.JSON,f=e.location,q=e.history,k=q,K=q.pushState,V=q.replaceState,o=function(){var a=e.navigator.userAgent;return(-1!==a.indexOf(\"Android 2.\")||-1!==a.indexOf(\"Android 4.0\"))&&-1!==a.indexOf(\"Mobile Safari\")&&-1===a.indexOf(\"Chrome\")&&-1===a.indexOf(\"Windows Phone\")?p:!!K}(),E=\"state\"in q,y=I.defineProperty,G=C({},\"t\")?{}:g.createElement(\"a\"),u=\"\",L=e.addEventListener?\"addEventListener\":(u=\"on\")&&\"attachEvent\",W=e.removeEventListener?\"removeEventListener\":\"detachEvent\",X=e.dispatchEvent?\n\"dispatchEvent\":\"fireEvent\",t=e[L],H=e[W],ca=e[X],l={basepath:\"/\",redirect:0,type:\"/\",init:0},B=\"__historyAPI__\",N=g.createElement(\"a\"),A=f.href,S=\"\",O=1,F=p,n=0,r={},v={},x=g.title,M,ea={onhashchange:i,onpopstate:i},Y={setup:function(a,b,c){l.basepath=(\"\"+(a==i?l.basepath:a)).replace(/(?:^|\\/)[^\\/]*$/,\"/\");l.type=b==i?l.type:b;l.redirect=c==i?l.redirect:!!c},redirect:function(a,b){k.setup(b,a);b=l.basepath;if(e.top==e.self){var c=j(i,p,h).c,d=f.pathname+f.search;o?(d=d.replace(/([^\\/])$/,\"$1/\"),\nc!=b&&RegExp(\"^\"+b+\"$\",\"i\").test(d)&&f.replace(c)):d!=b&&(d=d.replace(/([^\\/])\\?/,\"$1/?\"),RegExp(\"^\"+b,\"i\").test(d)&&f.replace(b+\"#\"+d.replace(RegExp(\"^\"+b,\"i\"),l.type)+f.hash))}},pushState:function(a,b,c){var d=g.title;x!=i&&(g.title=x);K&&m(K,arguments);z(a,c);g.title=d;x=b},replaceState:function(a,b,c){var d=g.title;x!=i&&(g.title=x);delete r[f.href];V&&m(V,arguments);z(a,c,h);g.title=d;x=b},location:{set:function(a){0===n&&(n=1);e.location=a},get:function(){0===n&&(n=1);return G}},state:{get:function(){return\"object\"===\ntypeof r[f.href]?s.parse(s.stringify(r[f.href])):\"undefined\"!==typeof r[f.href]?r[f.href]:i}}},P={assign:function(a){!o&&0===(\"\"+a).indexOf(\"#\")?z(i,a):f.assign(a)},reload:function(a){f.reload(a)},replace:function(a){!o&&0===(\"\"+a).indexOf(\"#\")?z(i,a,h):f.replace(a)},toString:function(){return this.href},origin:{get:function(){return void 0!==M?M:!f.origin?f.protocol+\"//\"+f.hostname+(f.port?\":\"+f.port:\"\"):f.origin},set:function(a){M=a}},href:o?i:{get:function(){return j().b}},protocol:i,host:i,hostname:i,\nport:i,pathname:o?i:{get:function(){return j().d}},search:o?i:{get:function(){return j().e}},hash:o?i:{set:function(a){z(i,(\"\"+a).replace(/^(#|)/,\"#\"),p,A)},get:function(){return j().a}}};if(function(){var a=g.getElementsByTagName(\"script\"),a=(a[a.length-1]||{}).src||\"\";(-1!==a.indexOf(\"?\")?a.split(\"?\").pop():\"\").replace(/(\\w+)(?:=([^&]*))?/g,function(a,b,c){l[b]=(c||\"\").replace(/^(0|false)$/,\"\")});t(u+\"hashchange\",R,p);var b=[P,G,ea,e,Y,k];E&&delete Y.state;for(var c=0;c<b.length;c+=2)for(var d in b[c])if(b[c].hasOwnProperty(d))if(\"object\"!==\ntypeof b[c][d])b[c+1][d]=b[c][d];else{a=$(b[c],d,b[c][d]);if(!C(b[c+1],d,a,function(a,d){if(d===k)e.history=k=b[c+1]=a}))return H(u+\"hashchange\",R,p),p;b[c+1]===e&&(v[d]=v[d.substr(2)]=[])}k.setup();l.redirect&&k.redirect();l.init&&(n=1);!E&&s&&Z();if(!o)g[L](u+\"click\",da,p);\"complete\"===g.readyState?T(h):(!o&&j().c!==l.basepath&&(F=h),t(u+\"load\",T,p));return h}())return k.emulate=!o,e[L]=aa,e[W]=ba,e[X]=D,k});\n\n"]}